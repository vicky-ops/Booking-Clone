{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohit\\\\OneDrive\\\\Desktop\\\\Booking.com\\\\scared-shade-6052\\\\src\\\\components\\\\Attractions\\\\pages_and_layouts\\\\Datepicker.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Badge from '@mui/material/Badge';\nimport TextField from '@mui/material/TextField';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport PickersDay from '@mui/lab/PickersDay';\nimport DatePicker from '@mui/lab/DatePicker';\nimport CalendarPickerSkeleton from '@mui/lab/CalendarPickerSkeleton';\nimport getDaysInMonth from 'date-fns/getDaysInMonth';\nimport { addDateForCheckout } from '../../../actions/checkOutdetails';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getRandomNumber(min, max) {\n  return Math.round(Math.random() * (max - min) + min);\n}\nfunction fakeFetch(date, _ref) {\n  let {\n    signal\n  } = _ref;\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout(() => {\n      const daysInMonth = getDaysInMonth(date);\n      const daysToHighlight = [1, 2, 3].map(() => getRandomNumber(1, daysInMonth));\n      resolve({\n        daysToHighlight\n      });\n    }, 500);\n    signal.onabort = () => {\n      clearTimeout(timeout);\n      reject(new DOMException('aborted', 'AbortError'));\n    };\n  });\n}\nconst initialValue = new Date();\nexport default function Datepicker() {\n  _s();\n  const requestAbortController = React.useRef(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [highlightedDays, setHighlightedDays] = React.useState([1, 2, 15]);\n  const [value, setValue] = React.useState(initialValue);\n  console.log(value);\n  const dispach = useDispatch();\n  React.useEffect(() => {\n    dispach(addDateForCheckout({\n      date: value\n    }));\n  }, [value]);\n  const fetchHighlightedDays = date => {\n    const controller = new AbortController();\n    fakeFetch(date, {\n      signal: controller.signal\n    }).then(_ref2 => {\n      let {\n        daysToHighlight\n      } = _ref2;\n      setHighlightedDays(daysToHighlight);\n      setIsLoading(false);\n    }).catch(error => {\n      // ignore the error if it's caused by `controller.abort`\n      if (error.name !== 'AbortError') {\n        throw error;\n      }\n    });\n    requestAbortController.current = controller;\n  };\n  React.useEffect(() => {\n    fetchHighlightedDays(initialValue);\n    // abort request on unmount\n    return () => {\n      var _requestAbortControll;\n      return (_requestAbortControll = requestAbortController.current) === null || _requestAbortControll === void 0 ? void 0 : _requestAbortControll.abort();\n    };\n  }, []);\n  const handleMonthChange = date => {\n    if (requestAbortController.current) {\n      // make sure that you are aborting useless requests\n      // because it is possible to switch between months pretty quickly\n      requestAbortController.current.abort();\n    }\n    setIsLoading(true);\n    setHighlightedDays([]);\n    fetchHighlightedDays(date);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n      dateAdapter: AdapterDateFns,\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        value: value,\n        minDate: initialValue,\n        loading: isLoading,\n        onChange: newValue => {\n          setValue(newValue);\n        },\n        onMonthChange: handleMonthChange,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params,\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 39\n        }, this),\n        renderLoading: () => /*#__PURE__*/_jsxDEV(CalendarPickerSkeleton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 30\n        }, this),\n        renderDay: (day, _value, DayComponentProps) => {\n          const isSelected = !DayComponentProps.outsideCurrentMonth && highlightedDays.indexOf(day.getDate()) > 0;\n          return /*#__PURE__*/_jsxDEV(Badge, {\n            overlap: \"circular\",\n            badgeContent: isSelected ? 'ðŸŒš' : undefined,\n            children: /*#__PURE__*/_jsxDEV(PickersDay, {\n              ...DayComponentProps\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, day.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(Datepicker, \"/gjofrIuKte2LARWQMF+g5Fw3vo=\", false, function () {\n  return [useDispatch];\n});\n_c = Datepicker;\nvar _c;\n$RefreshReg$(_c, \"Datepicker\");","map":{"version":3,"names":["React","Badge","TextField","AdapterDateFns","LocalizationProvider","PickersDay","DatePicker","CalendarPickerSkeleton","getDaysInMonth","addDateForCheckout","useDispatch","getRandomNumber","min","max","Math","round","random","fakeFetch","date","signal","Promise","resolve","reject","timeout","setTimeout","daysInMonth","daysToHighlight","map","onabort","clearTimeout","DOMException","initialValue","Date","Datepicker","requestAbortController","useRef","isLoading","setIsLoading","useState","highlightedDays","setHighlightedDays","value","setValue","console","log","dispach","useEffect","fetchHighlightedDays","controller","AbortController","then","catch","error","name","current","abort","handleMonthChange","newValue","params","width","day","_value","DayComponentProps","isSelected","outsideCurrentMonth","indexOf","getDate","undefined","toString"],"sources":["C:/Users/mohit/OneDrive/Desktop/Booking.com/scared-shade-6052/src/components/Attractions/pages_and_layouts/Datepicker.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport Badge from '@mui/material/Badge';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport PickersDay from '@mui/lab/PickersDay';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport CalendarPickerSkeleton from '@mui/lab/CalendarPickerSkeleton';\r\nimport getDaysInMonth from 'date-fns/getDaysInMonth';\r\nimport { addDateForCheckout } from '../../../actions/checkOutdetails';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nfunction getRandomNumber(min, max) {\r\n  return Math.round(Math.random() * (max - min) + min);\r\n}\r\n\r\n\r\nfunction fakeFetch(date, { signal }) {\r\n  return new Promise((resolve, reject) => {\r\n    const timeout = setTimeout(() => {\r\n      const daysInMonth = getDaysInMonth(date);\r\n      const daysToHighlight = [1, 2, 3].map(() => getRandomNumber(1, daysInMonth));\r\n\r\n      resolve({ daysToHighlight });\r\n    }, 500);\r\n\r\n    signal.onabort = () => {\r\n      clearTimeout(timeout);\r\n      reject(new DOMException('aborted', 'AbortError'));\r\n    };\r\n  });\r\n}\r\n\r\nconst initialValue = new Date();\r\n\r\nexport default function Datepicker() {\r\n  const requestAbortController = React.useRef(null);\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const [highlightedDays, setHighlightedDays] = React.useState([1, 2, 15]);\r\n  const [value, setValue] = React.useState(initialValue);\r\n  console.log( value );\r\n  const dispach = useDispatch();\r\n  React.useEffect( () => {\r\n    dispach(addDateForCheckout({date:value}))\r\n  },[value])\r\n  const fetchHighlightedDays = (date) => {\r\n    const controller = new AbortController();\r\n    fakeFetch(date, {\r\n      signal: controller.signal,\r\n    })\r\n      .then(({ daysToHighlight }) => {\r\n        setHighlightedDays(daysToHighlight);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        // ignore the error if it's caused by `controller.abort`\r\n        if (error.name !== 'AbortError') {\r\n          throw error;\r\n        }\r\n      });\r\n\r\n    requestAbortController.current = controller;\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    fetchHighlightedDays(initialValue);\r\n    // abort request on unmount\r\n    return () => requestAbortController.current?.abort();\r\n  }, []);\r\n\r\n  const handleMonthChange = (date) => {\r\n    if (requestAbortController.current) {\r\n      // make sure that you are aborting useless requests\r\n      // because it is possible to switch between months pretty quickly\r\n      requestAbortController.current.abort();\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setHighlightedDays([]);\r\n    fetchHighlightedDays(date);\r\n  };\r\n\r\n  return (\r\n    <div >\r\n<LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <DatePicker\r\n          value={ value }\r\n          minDate={initialValue}\r\n        loading={isLoading}\r\n        onChange={(newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        onMonthChange={handleMonthChange}\r\n          renderInput={ ( params ) => <TextField { ...params } style={ { width: '100%'} }/>}\r\n        renderLoading={() => <CalendarPickerSkeleton />}\r\n        renderDay={(day, _value, DayComponentProps) => {\r\n          const isSelected =\r\n            !DayComponentProps.outsideCurrentMonth &&\r\n            highlightedDays.indexOf(day.getDate()) > 0;\r\n\r\n          return (\r\n            <Badge\r\n              key={day.toString()}\r\n              overlap=\"circular\"\r\n              badgeContent={isSelected ? 'ðŸŒš' : undefined}\r\n            >\r\n              <PickersDay {...DayComponentProps} />\r\n            </Badge>\r\n          );\r\n        }}\r\n      />\r\n    </LocalizationProvider>\r\n    </div>\r\n\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}