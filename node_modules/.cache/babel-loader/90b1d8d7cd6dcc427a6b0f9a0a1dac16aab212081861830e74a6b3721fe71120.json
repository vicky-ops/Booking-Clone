{"ast":null,"code":"// ../../../react-shim.js\nimport React from \"react\";\n\n// src/skeleton.tsx\nimport { usePrevious } from \"@chakra-ui/react-use-previous\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = function () {\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n  return classNames.filter(Boolean).join(\" \");\n};\n\n// src/skeleton.tsx\nimport { chakra, cssVar, forwardRef, keyframes, omitThemingProps, useStyleConfig, useToken } from \"@chakra-ui/system\";\n\n// src/use-is-first-render.ts\nimport { useEffect, useRef } from \"react\";\nfunction useIsFirstRender() {\n  const isFirstRender = useRef(true);\n  useEffect(() => {\n    isFirstRender.current = false;\n  }, []);\n  return isFirstRender.current;\n}\n\n// src/skeleton.tsx\nvar StyledSkeleton = chakra(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\"\n    }\n  }\n});\nvar $startColor = cssVar(\"skeleton-start-color\");\nvar $endColor = cssVar(\"skeleton-end-color\");\nvar fade = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nvar bgFade = keyframes({\n  from: {\n    borderColor: $startColor.reference,\n    background: $startColor.reference\n  },\n  to: {\n    borderColor: $endColor.reference,\n    background: $endColor.reference\n  }\n});\nvar Skeleton = forwardRef((props, ref) => {\n  const skeletonProps = {\n    fadeDuration: 0.4,\n    speed: 0.8,\n    ...props\n  };\n  const styles = useStyleConfig(\"Skeleton\", skeletonProps);\n  const isFirstRender = useIsFirstRender();\n  const {\n    startColor = \"\",\n    endColor = \"\",\n    isLoaded,\n    fadeDuration,\n    speed,\n    className,\n    ...rest\n  } = omitThemingProps(skeletonProps);\n  const [startColorVar, endColorVar] = useToken(\"colors\", [startColor, endColor]);\n  const wasPreviouslyLoaded = usePrevious(isLoaded);\n  const _className = cx(\"chakra-skeleton\", className);\n  const cssVarStyles = {\n    ...(startColorVar && {\n      [$startColor.variable]: startColorVar\n    }),\n    ...(endColorVar && {\n      [$endColor.variable]: endColorVar\n    })\n  };\n  if (isLoaded) {\n    const animation = isFirstRender || wasPreviouslyLoaded ? \"none\" : `${fade} ${fadeDuration}s`;\n    return /* @__PURE__ */React.createElement(chakra.div, {\n      ref,\n      className: _className,\n      __css: {\n        animation\n      },\n      ...rest\n    });\n  }\n  return /* @__PURE__ */React.createElement(StyledSkeleton, {\n    ref,\n    className: _className,\n    ...rest,\n    __css: {\n      ...styles,\n      ...cssVarStyles,\n      _dark: {\n        ...cssVarStyles\n      },\n      animation: `${speed}s linear infinite alternate ${bgFade}`\n    }\n  });\n});\nSkeleton.displayName = \"Skeleton\";\n\n// src/skeleton-text.tsx\nimport { useBreakpointValue } from \"@chakra-ui/media-query\";\nimport { chakra as chakra2 } from \"@chakra-ui/system\";\nfunction range(count) {\n  return Array(count).fill(1).map((_, index) => index + 1);\n}\nvar defaultNoOfLines = 3;\nvar SkeletonText = props => {\n  const {\n    noOfLines = defaultNoOfLines,\n    spacing = \"0.5rem\",\n    skeletonHeight = \"0.5rem\",\n    className,\n    startColor,\n    endColor,\n    isLoaded,\n    fadeDuration,\n    speed,\n    children,\n    ...rest\n  } = props;\n  const noOfLinesValue = useBreakpointValue(typeof noOfLines === \"number\" ? [noOfLines] : noOfLines) || defaultNoOfLines;\n  const numbers = range(noOfLinesValue);\n  const getWidth = index => {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\";\n    }\n    return \"100%\";\n  };\n  const _className = cx(\"chakra-skeleton__group\", className);\n  return /* @__PURE__ */React.createElement(chakra2.div, {\n    className: _className,\n    ...rest\n  }, numbers.map((number, index) => {\n    if (isLoaded && index > 0) {\n      return null;\n    }\n    const sizeProps = isLoaded ? null : {\n      mb: number === numbers.length ? \"0\" : spacing,\n      width: getWidth(number),\n      height: skeletonHeight\n    };\n    return /* @__PURE__ */React.createElement(Skeleton, {\n      key: numbers.length.toString() + number,\n      startColor,\n      endColor,\n      isLoaded,\n      fadeDuration,\n      speed,\n      ...sizeProps\n    }, index === 0 ? children : void 0);\n  }));\n};\nSkeletonText.displayName = \"SkeletonText\";\n\n// src/skeleton-circle.tsx\nvar SkeletonCircle = _ref => {\n  let {\n    size = \"2rem\",\n    ...rest\n  } = _ref;\n  return /* @__PURE__ */React.createElement(Skeleton, {\n    borderRadius: \"full\",\n    boxSize: size,\n    ...rest\n  });\n};\nSkeletonCircle.displayName = \"SkeletonCircle\";\nexport { Skeleton, SkeletonCircle, SkeletonText };","map":{"version":3,"names":["React","usePrevious","cx","classNames","filter","Boolean","join","chakra","cssVar","forwardRef","keyframes","omitThemingProps","useStyleConfig","useToken","useEffect","useRef","useIsFirstRender","isFirstRender","current","StyledSkeleton","baseStyle","boxShadow","backgroundClip","cursor","color","pointerEvents","userSelect","visibility","$startColor","$endColor","fade","from","opacity","to","bgFade","borderColor","reference","background","Skeleton","props","ref","skeletonProps","fadeDuration","speed","styles","startColor","endColor","isLoaded","className","rest","startColorVar","endColorVar","wasPreviouslyLoaded","_className","cssVarStyles","variable","animation","createElement","div","__css","_dark","displayName","useBreakpointValue","chakra2","range","count","Array","fill","map","_","index","defaultNoOfLines","SkeletonText","noOfLines","spacing","skeletonHeight","children","noOfLinesValue","numbers","getWidth","length","number","sizeProps","mb","width","height","key","toString","SkeletonCircle","size","borderRadius","boxSize"],"sources":["C:/Users/mohit/OneDrive/Desktop/Booking.com/scared-shade-6052/node_modules/@chakra-ui/skeleton/dist/index.esm.js"],"sourcesContent":["// ../../../react-shim.js\nimport React from \"react\";\n\n// src/skeleton.tsx\nimport { usePrevious } from \"@chakra-ui/react-use-previous\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\n\n// src/skeleton.tsx\nimport {\n  chakra,\n  cssVar,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  useStyleConfig,\n  useToken\n} from \"@chakra-ui/system\";\n\n// src/use-is-first-render.ts\nimport { useEffect, useRef } from \"react\";\nfunction useIsFirstRender() {\n  const isFirstRender = useRef(true);\n  useEffect(() => {\n    isFirstRender.current = false;\n  }, []);\n  return isFirstRender.current;\n}\n\n// src/skeleton.tsx\nvar StyledSkeleton = chakra(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\"\n    }\n  }\n});\nvar $startColor = cssVar(\"skeleton-start-color\");\nvar $endColor = cssVar(\"skeleton-end-color\");\nvar fade = keyframes({\n  from: { opacity: 0 },\n  to: { opacity: 1 }\n});\nvar bgFade = keyframes({\n  from: {\n    borderColor: $startColor.reference,\n    background: $startColor.reference\n  },\n  to: {\n    borderColor: $endColor.reference,\n    background: $endColor.reference\n  }\n});\nvar Skeleton = forwardRef((props, ref) => {\n  const skeletonProps = {\n    fadeDuration: 0.4,\n    speed: 0.8,\n    ...props\n  };\n  const styles = useStyleConfig(\"Skeleton\", skeletonProps);\n  const isFirstRender = useIsFirstRender();\n  const {\n    startColor = \"\",\n    endColor = \"\",\n    isLoaded,\n    fadeDuration,\n    speed,\n    className,\n    ...rest\n  } = omitThemingProps(skeletonProps);\n  const [startColorVar, endColorVar] = useToken(\"colors\", [\n    startColor,\n    endColor\n  ]);\n  const wasPreviouslyLoaded = usePrevious(isLoaded);\n  const _className = cx(\"chakra-skeleton\", className);\n  const cssVarStyles = {\n    ...startColorVar && { [$startColor.variable]: startColorVar },\n    ...endColorVar && { [$endColor.variable]: endColorVar }\n  };\n  if (isLoaded) {\n    const animation = isFirstRender || wasPreviouslyLoaded ? \"none\" : `${fade} ${fadeDuration}s`;\n    return /* @__PURE__ */ React.createElement(chakra.div, {\n      ref,\n      className: _className,\n      __css: { animation },\n      ...rest\n    });\n  }\n  return /* @__PURE__ */ React.createElement(StyledSkeleton, {\n    ref,\n    className: _className,\n    ...rest,\n    __css: {\n      ...styles,\n      ...cssVarStyles,\n      _dark: { ...cssVarStyles },\n      animation: `${speed}s linear infinite alternate ${bgFade}`\n    }\n  });\n});\nSkeleton.displayName = \"Skeleton\";\n\n// src/skeleton-text.tsx\nimport { useBreakpointValue } from \"@chakra-ui/media-query\";\nimport { chakra as chakra2 } from \"@chakra-ui/system\";\nfunction range(count) {\n  return Array(count).fill(1).map((_, index) => index + 1);\n}\nvar defaultNoOfLines = 3;\nvar SkeletonText = (props) => {\n  const {\n    noOfLines = defaultNoOfLines,\n    spacing = \"0.5rem\",\n    skeletonHeight = \"0.5rem\",\n    className,\n    startColor,\n    endColor,\n    isLoaded,\n    fadeDuration,\n    speed,\n    children,\n    ...rest\n  } = props;\n  const noOfLinesValue = useBreakpointValue(typeof noOfLines === \"number\" ? [noOfLines] : noOfLines) || defaultNoOfLines;\n  const numbers = range(noOfLinesValue);\n  const getWidth = (index) => {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\";\n    }\n    return \"100%\";\n  };\n  const _className = cx(\"chakra-skeleton__group\", className);\n  return /* @__PURE__ */ React.createElement(chakra2.div, {\n    className: _className,\n    ...rest\n  }, numbers.map((number, index) => {\n    if (isLoaded && index > 0) {\n      return null;\n    }\n    const sizeProps = isLoaded ? null : {\n      mb: number === numbers.length ? \"0\" : spacing,\n      width: getWidth(number),\n      height: skeletonHeight\n    };\n    return /* @__PURE__ */ React.createElement(Skeleton, {\n      key: numbers.length.toString() + number,\n      startColor,\n      endColor,\n      isLoaded,\n      fadeDuration,\n      speed,\n      ...sizeProps\n    }, index === 0 ? children : void 0);\n  }));\n};\nSkeletonText.displayName = \"SkeletonText\";\n\n// src/skeleton-circle.tsx\nvar SkeletonCircle = ({\n  size = \"2rem\",\n  ...rest\n}) => /* @__PURE__ */ React.createElement(Skeleton, {\n  borderRadius: \"full\",\n  boxSize: size,\n  ...rest\n});\nSkeletonCircle.displayName = \"SkeletonCircle\";\nexport {\n  Skeleton,\n  SkeletonCircle,\n  SkeletonText\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}