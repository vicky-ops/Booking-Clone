{"ast":null,"code":"/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = function () {\n  if (typeof Map !== 'undefined') {\n    return Map;\n  }\n\n  /**\r\n   * Returns index in provided array that matches the specified key.\r\n   *\r\n   * @param {Array<Array>} arr\r\n   * @param {*} key\r\n   * @returns {number}\r\n   */\n  function getIndex(arr, key) {\n    var result = -1;\n    arr.some(function (entry, index) {\n      if (entry[0] === key) {\n        result = index;\n        return true;\n      }\n      return false;\n    });\n    return result;\n  }\n  return function () {\n    function anonymous() {\n      this.__entries__ = [];\n    }\n    var prototypeAccessors = {\n      size: {\n        configurable: true\n      }\n    };\n\n    /**\r\n     * @returns {boolean}\r\n     */\n    prototypeAccessors.size.get = function () {\n      return this.__entries__.length;\n    };\n\n    /**\r\n     * @param {*} key\r\n     * @returns {*}\r\n     */\n    anonymous.prototype.get = function (key) {\n      var index = getIndex(this.__entries__, key);\n      var entry = this.__entries__[index];\n      return entry && entry[1];\n    };\n\n    /**\r\n     * @param {*} key\r\n     * @param {*} value\r\n     * @returns {void}\r\n     */\n    anonymous.prototype.set = function (key, value) {\n      var index = getIndex(this.__entries__, key);\n      if (~index) {\n        this.__entries__[index][1] = value;\n      } else {\n        this.__entries__.push([key, value]);\n      }\n    };\n\n    /**\r\n     * @param {*} key\r\n     * @returns {void}\r\n     */\n    anonymous.prototype.delete = function (key) {\n      var entries = this.__entries__;\n      var index = getIndex(entries, key);\n      if (~index) {\n        entries.splice(index, 1);\n      }\n    };\n\n    /**\r\n     * @param {*} key\r\n     * @returns {void}\r\n     */\n    anonymous.prototype.has = function (key) {\n      return !!~getIndex(this.__entries__, key);\n    };\n\n    /**\r\n     * @returns {void}\r\n     */\n    anonymous.prototype.clear = function () {\n      this.__entries__.splice(0);\n    };\n\n    /**\r\n     * @param {Function} callback\r\n     * @param {*} [ctx=null]\r\n     * @returns {void}\r\n     */\n    anonymous.prototype.forEach = function (callback, ctx) {\n      var this$1 = this;\n      if (ctx === void 0) ctx = null;\n      for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {\n        var entry = list[i];\n        callback.call(ctx, entry[1], entry[0]);\n      }\n    };\n    Object.defineProperties(anonymous.prototype, prototypeAccessors);\n    return anonymous;\n  }();\n}();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\nvar global$1 = function () {\n  if (typeof global !== 'undefined' && global.Math === Math) {\n    return global;\n  }\n  if (typeof self !== 'undefined' && self.Math === Math) {\n    return self;\n  }\n  if (typeof window !== 'undefined' && window.Math === Math) {\n    return window;\n  }\n\n  // eslint-disable-next-line no-new-func\n  return Function('return this')();\n}();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\nvar requestAnimationFrame$1 = function () {\n  if (typeof requestAnimationFrame === 'function') {\n    // It's required to use a bounded function because IE sometimes throws\n    // an \"Invalid calling object\" error if rAF is invoked without the global\n    // object on the left hand side.\n    return requestAnimationFrame.bind(global$1);\n  }\n  return function (callback) {\n    return setTimeout(function () {\n      return callback(Date.now());\n    }, 1000 / 60);\n  };\n}();\n\n// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout = 2;\n\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\nvar throttle = function (callback, delay) {\n  var leadingCall = false,\n    trailingCall = false,\n    lastCallTime = 0;\n\n  /**\r\n   * Invokes the original callback function and schedules new invocation if\r\n   * the \"proxy\" was called during current request.\r\n   *\r\n   * @returns {void}\r\n   */\n  function resolvePending() {\n    if (leadingCall) {\n      leadingCall = false;\n      callback();\n    }\n    if (trailingCall) {\n      proxy();\n    }\n  }\n\n  /**\r\n   * Callback invoked after the specified delay. It will further postpone\r\n   * invocation of the original function delegating it to the\r\n   * requestAnimationFrame.\r\n   *\r\n   * @returns {void}\r\n   */\n  function timeoutCallback() {\n    requestAnimationFrame$1(resolvePending);\n  }\n\n  /**\r\n   * Schedules invocation of the original function.\r\n   *\r\n   * @returns {void}\r\n   */\n  function proxy() {\n    var timeStamp = Date.now();\n    if (leadingCall) {\n      // Reject immediately following calls.\n      if (timeStamp - lastCallTime < trailingTimeout) {\n        return;\n      }\n\n      // Schedule new call to be in invoked when the pending one is resolved.\n      // This is important for \"transitions\" which never actually start\n      // immediately so there is a chance that we might miss one if change\n      // happens amids the pending invocation.\n      trailingCall = true;\n    } else {\n      leadingCall = true;\n      trailingCall = false;\n      setTimeout(timeoutCallback, delay);\n    }\n    lastCallTime = timeStamp;\n  }\n  return proxy;\n};\n\n// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY = 20;\n\n// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\n\n// Check if MutationObserver is available.\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\nvar ResizeObserverController = function () {\n  this.connected_ = false;\n  this.mutationEventsAdded_ = false;\n  this.mutationsObserver_ = null;\n  this.observers_ = [];\n  this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n  this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n};\n\n/**\r\n * Adds observer to observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be added.\r\n * @returns {void}\r\n */\n\n/**\r\n * Holds reference to the controller's instance.\r\n *\r\n * @private {ResizeObserverController}\r\n */\n\n/**\r\n * Keeps reference to the instance of MutationObserver.\r\n *\r\n * @private {MutationObserver}\r\n */\n\n/**\r\n * Indicates whether DOM listeners have been added.\r\n *\r\n * @private {boolean}\r\n */\nResizeObserverController.prototype.addObserver = function (observer) {\n  if (!~this.observers_.indexOf(observer)) {\n    this.observers_.push(observer);\n  }\n\n  // Add listeners if they haven't been added yet.\n  if (!this.connected_) {\n    this.connect_();\n  }\n};\n\n/**\r\n * Removes observer from observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.removeObserver = function (observer) {\n  var observers = this.observers_;\n  var index = observers.indexOf(observer);\n\n  // Remove observer if it's present in registry.\n  if (~index) {\n    observers.splice(index, 1);\n  }\n\n  // Remove listeners if controller has no connected observers.\n  if (!observers.length && this.connected_) {\n    this.disconnect_();\n  }\n};\n\n/**\r\n * Invokes the update of observers. It will continue running updates insofar\r\n * it detects changes.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.refresh = function () {\n  var changesDetected = this.updateObservers_();\n\n  // Continue running updates if changes have been detected as there might\n  // be future ones caused by CSS transitions.\n  if (changesDetected) {\n    this.refresh();\n  }\n};\n\n/**\r\n * Updates every observer from observers list and notifies them of queued\r\n * entries.\r\n *\r\n * @private\r\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n *  dimensions of it's elements.\r\n */\nResizeObserverController.prototype.updateObservers_ = function () {\n  // Collect observers that have active observations.\n  var activeObservers = this.observers_.filter(function (observer) {\n    return observer.gatherActive(), observer.hasActive();\n  });\n\n  // Deliver notifications in a separate cycle in order to avoid any\n  // collisions between observers, e.g. when multiple instances of\n  // ResizeObserver are tracking the same element and the callback of one\n  // of them changes content dimensions of the observed target. Sometimes\n  // this may result in notifications being blocked for the rest of observers.\n  activeObservers.forEach(function (observer) {\n    return observer.broadcastActive();\n  });\n  return activeObservers.length > 0;\n};\n\n/**\r\n * Initializes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.connect_ = function () {\n  // Do nothing if running in a non-browser environment or if listeners\n  // have been already added.\n  if (!isBrowser || this.connected_) {\n    return;\n  }\n\n  // Subscription to the \"Transitionend\" event is used as a workaround for\n  // delayed transitions. This way it's possible to capture at least the\n  // final state of an element.\n  document.addEventListener('transitionend', this.onTransitionEnd_);\n  window.addEventListener('resize', this.refresh);\n  if (mutationObserverSupported) {\n    this.mutationsObserver_ = new MutationObserver(this.refresh);\n    this.mutationsObserver_.observe(document, {\n      attributes: true,\n      childList: true,\n      characterData: true,\n      subtree: true\n    });\n  } else {\n    document.addEventListener('DOMSubtreeModified', this.refresh);\n    this.mutationEventsAdded_ = true;\n  }\n  this.connected_ = true;\n};\n\n/**\r\n * Removes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.disconnect_ = function () {\n  // Do nothing if running in a non-browser environment or if listeners\n  // have been already removed.\n  if (!isBrowser || !this.connected_) {\n    return;\n  }\n  document.removeEventListener('transitionend', this.onTransitionEnd_);\n  window.removeEventListener('resize', this.refresh);\n  if (this.mutationsObserver_) {\n    this.mutationsObserver_.disconnect();\n  }\n  if (this.mutationEventsAdded_) {\n    document.removeEventListener('DOMSubtreeModified', this.refresh);\n  }\n  this.mutationsObserver_ = null;\n  this.mutationEventsAdded_ = false;\n  this.connected_ = false;\n};\n\n/**\r\n * \"Transitionend\" event handler.\r\n *\r\n * @private\r\n * @param {TransitionEvent} event\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.onTransitionEnd_ = function (ref) {\n  var propertyName = ref.propertyName;\n  if (propertyName === void 0) propertyName = '';\n\n  // Detect whether transition may affect dimensions of an element.\n  var isReflowProperty = transitionKeys.some(function (key) {\n    return !!~propertyName.indexOf(key);\n  });\n  if (isReflowProperty) {\n    this.refresh();\n  }\n};\n\n/**\r\n * Returns instance of the ResizeObserverController.\r\n *\r\n * @returns {ResizeObserverController}\r\n */\nResizeObserverController.getInstance = function () {\n  if (!this.instance_) {\n    this.instance_ = new ResizeObserverController();\n  }\n  return this.instance_;\n};\nResizeObserverController.instance_ = null;\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\nvar defineConfigurable = function (target, props) {\n  for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\n    var key = list[i];\n    Object.defineProperty(target, key, {\n      value: props[key],\n      enumerable: false,\n      writable: false,\n      configurable: true\n    });\n  }\n  return target;\n};\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\nvar getWindowOf = function (target) {\n  // Assume that the element is an instance of Node, which means that it\n  // has the \"ownerDocument\" property from which we can retrieve a\n  // corresponding global object.\n  var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\n\n  // Return the local global object if it's not possible extract one from\n  // provided element.\n  return ownerGlobal || global$1;\n};\n\n// Placeholder of an empty content rectangle.\nvar emptyRect = createRectInit(0, 0, 0, 0);\n\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\nfunction toFloat(value) {\n  return parseFloat(value) || 0;\n}\n\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\nfunction getBordersSize(styles) {\n  var positions = [],\n    len = arguments.length - 1;\n  while (len-- > 0) positions[len] = arguments[len + 1];\n  return positions.reduce(function (size, position) {\n    var value = styles['border-' + position + '-width'];\n    return size + toFloat(value);\n  }, 0);\n}\n\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\nfunction getPaddings(styles) {\n  var positions = ['top', 'right', 'bottom', 'left'];\n  var paddings = {};\n  for (var i = 0, list = positions; i < list.length; i += 1) {\n    var position = list[i];\n    var value = styles['padding-' + position];\n    paddings[position] = toFloat(value);\n  }\n  return paddings;\n}\n\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getSVGContentRect(target) {\n  var bbox = target.getBBox();\n  return createRectInit(0, 0, bbox.width, bbox.height);\n}\n\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\nfunction getHTMLElementContentRect(target) {\n  // Client width & height properties can't be\n  // used exclusively as they provide rounded values.\n  var clientWidth = target.clientWidth;\n  var clientHeight = target.clientHeight;\n\n  // By this condition we can catch all non-replaced inline, hidden and\n  // detached elements. Though elements with width & height properties less\n  // than 0.5 will be discarded as well.\n  //\n  // Without it we would need to implement separate methods for each of\n  // those cases and it's not possible to perform a precise and performance\n  // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n  // gives wrong results for elements with width & height less than 0.5.\n  if (!clientWidth && !clientHeight) {\n    return emptyRect;\n  }\n  var styles = getWindowOf(target).getComputedStyle(target);\n  var paddings = getPaddings(styles);\n  var horizPad = paddings.left + paddings.right;\n  var vertPad = paddings.top + paddings.bottom;\n\n  // Computed styles of width & height are being used because they are the\n  // only dimensions available to JS that contain non-rounded values. It could\n  // be possible to utilize the getBoundingClientRect if only it's data wasn't\n  // affected by CSS transformations let alone paddings, borders and scroll bars.\n  var width = toFloat(styles.width),\n    height = toFloat(styles.height);\n\n  // Width & height include paddings and borders when the 'border-box' box\n  // model is applied (except for IE).\n  if (styles.boxSizing === 'border-box') {\n    // Following conditions are required to handle Internet Explorer which\n    // doesn't include paddings and borders to computed CSS dimensions.\n    //\n    // We can say that if CSS dimensions + paddings are equal to the \"client\"\n    // properties then it's either IE, and thus we don't need to subtract\n    // anything, or an element merely doesn't have paddings/borders styles.\n    if (Math.round(width + horizPad) !== clientWidth) {\n      width -= getBordersSize(styles, 'left', 'right') + horizPad;\n    }\n    if (Math.round(height + vertPad) !== clientHeight) {\n      height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n    }\n  }\n\n  // Following steps can't be applied to the document's root element as its\n  // client[Width/Height] properties represent viewport area of the window.\n  // Besides, it's as well not necessary as the <html> itself neither has\n  // rendered scroll bars nor it can be clipped.\n  if (!isDocumentElement(target)) {\n    // In some browsers (only in Firefox, actually) CSS width & height\n    // include scroll bars size which can be removed at this step as scroll\n    // bars are the only difference between rounded dimensions + paddings\n    // and \"client\" properties, though that is not always true in Chrome.\n    var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n    var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n\n    // Chrome has a rather weird rounding of \"client\" properties.\n    // E.g. for an element with content width of 314.2px it sometimes gives\n    // the client width of 315px and for the width of 314.7px it may give\n    // 314px. And it doesn't happen all the time. So just ignore this delta\n    // as a non-relevant.\n    if (Math.abs(vertScrollbar) !== 1) {\n      width -= vertScrollbar;\n    }\n    if (Math.abs(horizScrollbar) !== 1) {\n      height -= horizScrollbar;\n    }\n  }\n  return createRectInit(paddings.left, paddings.top, width, height);\n}\n\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nvar isSVGGraphicsElement = function () {\n  // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n  // interface.\n  if (typeof SVGGraphicsElement !== 'undefined') {\n    return function (target) {\n      return target instanceof getWindowOf(target).SVGGraphicsElement;\n    };\n  }\n\n  // If it's so, then check that element is at least an instance of the\n  // SVGElement and that it has the \"getBBox\" method.\n  // eslint-disable-next-line no-extra-parens\n  return function (target) {\n    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function';\n  };\n}();\n\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nfunction isDocumentElement(target) {\n  return target === getWindowOf(target).document.documentElement;\n}\n\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getContentRect(target) {\n  if (!isBrowser) {\n    return emptyRect;\n  }\n  if (isSVGGraphicsElement(target)) {\n    return getSVGContentRect(target);\n  }\n  return getHTMLElementContentRect(target);\n}\n\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\nfunction createReadOnlyRect(ref) {\n  var x = ref.x;\n  var y = ref.y;\n  var width = ref.width;\n  var height = ref.height;\n\n  // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n  var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n  var rect = Object.create(Constr.prototype);\n\n  // Rectangle's properties are not writable and non-enumerable.\n  defineConfigurable(rect, {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: height + y,\n    left: x\n  });\n  return rect;\n}\n\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\nfunction createRectInit(x, y, width, height) {\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\nvar ResizeObservation = function (target) {\n  this.broadcastWidth = 0;\n  this.broadcastHeight = 0;\n  this.contentRect_ = createRectInit(0, 0, 0, 0);\n  this.target = target;\n};\n\n/**\r\n * Updates content rectangle and tells whether it's width or height properties\r\n * have changed since the last broadcast.\r\n *\r\n * @returns {boolean}\r\n */\n\n/**\r\n * Reference to the last observed content rectangle.\r\n *\r\n * @private {DOMRectInit}\r\n */\n\n/**\r\n * Broadcasted width of content rectangle.\r\n *\r\n * @type {number}\r\n */\nResizeObservation.prototype.isActive = function () {\n  var rect = getContentRect(this.target);\n  this.contentRect_ = rect;\n  return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n};\n\n/**\r\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n * from the corresponding properties of the last observed content rectangle.\r\n *\r\n * @returns {DOMRectInit} Last observed content rectangle.\r\n */\nResizeObservation.prototype.broadcastRect = function () {\n  var rect = this.contentRect_;\n  this.broadcastWidth = rect.width;\n  this.broadcastHeight = rect.height;\n  return rect;\n};\nvar ResizeObserverEntry = function (target, rectInit) {\n  var contentRect = createReadOnlyRect(rectInit);\n\n  // According to the specification following properties are not writable\n  // and are also not enumerable in the native implementation.\n  //\n  // Property accessors are not being used as they'd require to define a\n  // private WeakMap storage which may cause memory leaks in browsers that\n  // don't support this type of collections.\n  defineConfigurable(this, {\n    target: target,\n    contentRect: contentRect\n  });\n};\nvar ResizeObserverSPI = function (callback, controller, callbackCtx) {\n  this.activeObservations_ = [];\n  this.observations_ = new MapShim();\n  if (typeof callback !== 'function') {\n    throw new TypeError('The callback provided as parameter 1 is not a function.');\n  }\n  this.callback_ = callback;\n  this.controller_ = controller;\n  this.callbackCtx_ = callbackCtx;\n};\n\n/**\r\n * Starts observing provided element.\r\n *\r\n * @param {Element} target - Element to be observed.\r\n * @returns {void}\r\n */\n\n/**\r\n * Registry of the ResizeObservation instances.\r\n *\r\n * @private {Map<Element, ResizeObservation>}\r\n */\n\n/**\r\n * Public ResizeObserver instance which will be passed to the callback\r\n * function and used as a value of it's \"this\" binding.\r\n *\r\n * @private {ResizeObserver}\r\n */\n\n/**\r\n * Collection of resize observations that have detected changes in dimensions\r\n * of elements.\r\n *\r\n * @private {Array<ResizeObservation>}\r\n */\nResizeObserverSPI.prototype.observe = function (target) {\n  if (!arguments.length) {\n    throw new TypeError('1 argument required, but only 0 present.');\n  }\n\n  // Do nothing if current environment doesn't have the Element interface.\n  if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n    return;\n  }\n  if (!(target instanceof getWindowOf(target).Element)) {\n    throw new TypeError('parameter 1 is not of type \"Element\".');\n  }\n  var observations = this.observations_;\n\n  // Do nothing if element is already being observed.\n  if (observations.has(target)) {\n    return;\n  }\n  observations.set(target, new ResizeObservation(target));\n  this.controller_.addObserver(this);\n\n  // Force the update of observations.\n  this.controller_.refresh();\n};\n\n/**\r\n * Stops observing provided element.\r\n *\r\n * @param {Element} target - Element to stop observing.\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.unobserve = function (target) {\n  if (!arguments.length) {\n    throw new TypeError('1 argument required, but only 0 present.');\n  }\n\n  // Do nothing if current environment doesn't have the Element interface.\n  if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n    return;\n  }\n  if (!(target instanceof getWindowOf(target).Element)) {\n    throw new TypeError('parameter 1 is not of type \"Element\".');\n  }\n  var observations = this.observations_;\n\n  // Do nothing if element is not being observed.\n  if (!observations.has(target)) {\n    return;\n  }\n  observations.delete(target);\n  if (!observations.size) {\n    this.controller_.removeObserver(this);\n  }\n};\n\n/**\r\n * Stops observing all elements.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.disconnect = function () {\n  this.clearActive();\n  this.observations_.clear();\n  this.controller_.removeObserver(this);\n};\n\n/**\r\n * Collects observation instances the associated element of which has changed\r\n * it's content rectangle.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.gatherActive = function () {\n  var this$1 = this;\n  this.clearActive();\n  this.observations_.forEach(function (observation) {\n    if (observation.isActive()) {\n      this$1.activeObservations_.push(observation);\n    }\n  });\n};\n\n/**\r\n * Invokes initial callback function with a list of ResizeObserverEntry\r\n * instances collected from active resize observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.broadcastActive = function () {\n  // Do nothing if observer doesn't have active observations.\n  if (!this.hasActive()) {\n    return;\n  }\n  var ctx = this.callbackCtx_;\n\n  // Create ResizeObserverEntry instance for every active observation.\n  var entries = this.activeObservations_.map(function (observation) {\n    return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n  });\n  this.callback_.call(ctx, entries, ctx);\n  this.clearActive();\n};\n\n/**\r\n * Clears the collection of active observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.clearActive = function () {\n  this.activeObservations_.splice(0);\n};\n\n/**\r\n * Tells whether observer has active observations.\r\n *\r\n * @returns {boolean}\r\n */\nResizeObserverSPI.prototype.hasActive = function () {\n  return this.activeObservations_.length > 0;\n};\n\n// Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\nvar ResizeObserver = function (callback) {\n  if (!(this instanceof ResizeObserver)) {\n    throw new TypeError('Cannot call a class as a function.');\n  }\n  if (!arguments.length) {\n    throw new TypeError('1 argument required, but only 0 present.');\n  }\n  var controller = ResizeObserverController.getInstance();\n  var observer = new ResizeObserverSPI(callback, controller, this);\n  observers.set(this, observer);\n};\n\n// Expose public methods of ResizeObserver.\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n  ResizeObserver.prototype[method] = function () {\n    return (ref = observers.get(this))[method].apply(ref, arguments);\n    var ref;\n  };\n});\nvar index = function () {\n  // Export existing implementation if available.\n  if (typeof global$1.ResizeObserver !== 'undefined') {\n    return global$1.ResizeObserver;\n  }\n  return ResizeObserver;\n}();\nexport default index;","map":{"version":3,"names":["MapShim","Map","getIndex","arr","key","result","some","entry","index","anonymous","__entries__","prototypeAccessors","size","configurable","get","length","prototype","set","value","push","delete","entries","splice","has","clear","forEach","callback","ctx","this$1","i","list","call","Object","defineProperties","isBrowser","window","document","global$1","global","Math","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","trailingTimeout","throttle","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","changesDetected","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","ref","propertyName","isReflowProperty","getInstance","instance_","defineConfigurable","target","props","keys","defineProperty","enumerable","writable","getWindowOf","ownerGlobal","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","len","arguments","reduce","position","getPaddings","paddings","getSVGContentRect","bbox","getBBox","width","height","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","horizPad","left","right","vertPad","top","bottom","boxSizing","round","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","documentElement","getContentRect","createReadOnlyRect","x","y","Constr","DOMRectReadOnly","rect","create","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","ResizeObserverEntry","rectInit","contentRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","observation","map","WeakMap","ResizeObserver","method","apply"],"sources":["C:/Users/mohit/OneDrive/Desktop/Booking.com/scared-shade-6052/node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js"],"sourcesContent":["/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = (function () {\n    if (typeof Map !== 'undefined') {\n        return Map;\n    }\n\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\n    function getIndex(arr, key) {\n        var result = -1;\n\n        arr.some(function (entry, index) {\n            if (entry[0] === key) {\n                result = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        return result;\n    }\n\n    return (function () {\n        function anonymous() {\n            this.__entries__ = [];\n        }\n\n        var prototypeAccessors = { size: { configurable: true } };\n\n        /**\r\n         * @returns {boolean}\r\n         */\n        prototypeAccessors.size.get = function () {\n            return this.__entries__.length;\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\n        anonymous.prototype.get = function (key) {\n            var index = getIndex(this.__entries__, key);\n            var entry = this.__entries__[index];\n\n            return entry && entry[1];\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.set = function (key, value) {\n            var index = getIndex(this.__entries__, key);\n\n            if (~index) {\n                this.__entries__[index][1] = value;\n            } else {\n                this.__entries__.push([key, value]);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.delete = function (key) {\n            var entries = this.__entries__;\n            var index = getIndex(entries, key);\n\n            if (~index) {\n                entries.splice(index, 1);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.has = function (key) {\n            return !!~getIndex(this.__entries__, key);\n        };\n\n        /**\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.clear = function () {\n            this.__entries__.splice(0);\n        };\n\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.forEach = function (callback, ctx) {\n            var this$1 = this;\n            if ( ctx === void 0 ) ctx = null;\n\n            for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {\n                var entry = list[i];\n\n                callback.call(ctx, entry[1], entry[0]);\n            }\n        };\n\n        Object.defineProperties( anonymous.prototype, prototypeAccessors );\n\n        return anonymous;\n    }());\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\nvar global$1 = (function () {\n    if (typeof global !== 'undefined' && global.Math === Math) {\n        return global;\n    }\n\n    if (typeof self !== 'undefined' && self.Math === Math) {\n        return self;\n    }\n\n    if (typeof window !== 'undefined' && window.Math === Math) {\n        return window;\n    }\n\n    // eslint-disable-next-line no-new-func\n    return Function('return this')();\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\nvar requestAnimationFrame$1 = (function () {\n    if (typeof requestAnimationFrame === 'function') {\n        // It's required to use a bounded function because IE sometimes throws\n        // an \"Invalid calling object\" error if rAF is invoked without the global\n        // object on the left hand side.\n        return requestAnimationFrame.bind(global$1);\n    }\n\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\n})();\n\n// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout = 2;\n\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\nvar throttle = function (callback, delay) {\n    var leadingCall = false,\n        trailingCall = false,\n        lastCallTime = 0;\n\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\n    function resolvePending() {\n        if (leadingCall) {\n            leadingCall = false;\n\n            callback();\n        }\n\n        if (trailingCall) {\n            proxy();\n        }\n    }\n\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\n    function timeoutCallback() {\n        requestAnimationFrame$1(resolvePending);\n    }\n\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\n    function proxy() {\n        var timeStamp = Date.now();\n\n        if (leadingCall) {\n            // Reject immediately following calls.\n            if (timeStamp - lastCallTime < trailingTimeout) {\n                return;\n            }\n\n            // Schedule new call to be in invoked when the pending one is resolved.\n            // This is important for \"transitions\" which never actually start\n            // immediately so there is a chance that we might miss one if change\n            // happens amids the pending invocation.\n            trailingCall = true;\n        } else {\n            leadingCall = true;\n            trailingCall = false;\n\n            setTimeout(timeoutCallback, delay);\n        }\n\n        lastCallTime = timeStamp;\n    }\n\n    return proxy;\n};\n\n// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY = 20;\n\n// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\n\n// Check if MutationObserver is available.\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\nvar ResizeObserverController = function() {\n    this.connected_ = false;\n    this.mutationEventsAdded_ = false;\n    this.mutationsObserver_ = null;\n    this.observers_ = [];\n\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n};\n\n/**\r\n * Adds observer to observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be added.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Holds reference to the controller's instance.\r\n *\r\n * @private {ResizeObserverController}\r\n */\n\n\n/**\r\n * Keeps reference to the instance of MutationObserver.\r\n *\r\n * @private {MutationObserver}\r\n */\n\n/**\r\n * Indicates whether DOM listeners have been added.\r\n *\r\n * @private {boolean}\r\n */\nResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n        this.observers_.push(observer);\n    }\n\n    // Add listeners if they haven't been added yet.\n    if (!this.connected_) {\n        this.connect_();\n    }\n};\n\n/**\r\n * Removes observer from observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer);\n\n    // Remove observer if it's present in registry.\n    if (~index) {\n        observers.splice(index, 1);\n    }\n\n    // Remove listeners if controller has no connected observers.\n    if (!observers.length && this.connected_) {\n        this.disconnect_();\n    }\n};\n\n/**\r\n * Invokes the update of observers. It will continue running updates insofar\r\n * it detects changes.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_();\n\n    // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n    if (changesDetected) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Updates every observer from observers list and notifies them of queued\r\n * entries.\r\n *\r\n * @private\r\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n *  dimensions of it's elements.\r\n */\nResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n        return observer.gatherActive(), observer.hasActive();\n    });\n\n    // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\n\n    return activeObservers.length > 0;\n};\n\n/**\r\n * Initializes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n        return;\n    }\n\n    // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\n\n        this.mutationsObserver_.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n        });\n    } else {\n        document.addEventListener('DOMSubtreeModified', this.refresh);\n\n        this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n};\n\n/**\r\n * Removes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n        return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n        this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n        document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n};\n\n/**\r\n * \"Transitionend\" event handler.\r\n *\r\n * @private\r\n * @param {TransitionEvent} event\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.onTransitionEnd_ = function (ref) {\n        var propertyName = ref.propertyName; if ( propertyName === void 0 ) propertyName = '';\n\n    // Detect whether transition may affect dimensions of an element.\n    var isReflowProperty = transitionKeys.some(function (key) {\n        return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Returns instance of the ResizeObserverController.\r\n *\r\n * @returns {ResizeObserverController}\r\n */\nResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n        this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n};\n\nResizeObserverController.instance_ = null;\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\nvar defineConfigurable = (function (target, props) {\n    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\n        var key = list[i];\n\n        Object.defineProperty(target, key, {\n            value: props[key],\n            enumerable: false,\n            writable: false,\n            configurable: true\n        });\n    }\n\n    return target;\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\nvar getWindowOf = (function (target) {\n    // Assume that the element is an instance of Node, which means that it\n    // has the \"ownerDocument\" property from which we can retrieve a\n    // corresponding global object.\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\n\n    // Return the local global object if it's not possible extract one from\n    // provided element.\n    return ownerGlobal || global$1;\n});\n\n// Placeholder of an empty content rectangle.\nvar emptyRect = createRectInit(0, 0, 0, 0);\n\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\nfunction toFloat(value) {\n    return parseFloat(value) || 0;\n}\n\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\nfunction getBordersSize(styles) {\n    var positions = [], len = arguments.length - 1;\n    while ( len-- > 0 ) positions[ len ] = arguments[ len + 1 ];\n\n    return positions.reduce(function (size, position) {\n        var value = styles['border-' + position + '-width'];\n\n        return size + toFloat(value);\n    }, 0);\n}\n\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\nfunction getPaddings(styles) {\n    var positions = ['top', 'right', 'bottom', 'left'];\n    var paddings = {};\n\n    for (var i = 0, list = positions; i < list.length; i += 1) {\n        var position = list[i];\n\n        var value = styles['padding-' + position];\n\n        paddings[position] = toFloat(value);\n    }\n\n    return paddings;\n}\n\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getSVGContentRect(target) {\n    var bbox = target.getBBox();\n\n    return createRectInit(0, 0, bbox.width, bbox.height);\n}\n\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\nfunction getHTMLElementContentRect(target) {\n    // Client width & height properties can't be\n    // used exclusively as they provide rounded values.\n    var clientWidth = target.clientWidth;\n    var clientHeight = target.clientHeight;\n\n    // By this condition we can catch all non-replaced inline, hidden and\n    // detached elements. Though elements with width & height properties less\n    // than 0.5 will be discarded as well.\n    //\n    // Without it we would need to implement separate methods for each of\n    // those cases and it's not possible to perform a precise and performance\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n    // gives wrong results for elements with width & height less than 0.5.\n    if (!clientWidth && !clientHeight) {\n        return emptyRect;\n    }\n\n    var styles = getWindowOf(target).getComputedStyle(target);\n    var paddings = getPaddings(styles);\n    var horizPad = paddings.left + paddings.right;\n    var vertPad = paddings.top + paddings.bottom;\n\n    // Computed styles of width & height are being used because they are the\n    // only dimensions available to JS that contain non-rounded values. It could\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\n    var width = toFloat(styles.width),\n        height = toFloat(styles.height);\n\n    // Width & height include paddings and borders when the 'border-box' box\n    // model is applied (except for IE).\n    if (styles.boxSizing === 'border-box') {\n        // Following conditions are required to handle Internet Explorer which\n        // doesn't include paddings and borders to computed CSS dimensions.\n        //\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\n        // properties then it's either IE, and thus we don't need to subtract\n        // anything, or an element merely doesn't have paddings/borders styles.\n        if (Math.round(width + horizPad) !== clientWidth) {\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\n        }\n\n        if (Math.round(height + vertPad) !== clientHeight) {\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n        }\n    }\n\n    // Following steps can't be applied to the document's root element as its\n    // client[Width/Height] properties represent viewport area of the window.\n    // Besides, it's as well not necessary as the <html> itself neither has\n    // rendered scroll bars nor it can be clipped.\n    if (!isDocumentElement(target)) {\n        // In some browsers (only in Firefox, actually) CSS width & height\n        // include scroll bars size which can be removed at this step as scroll\n        // bars are the only difference between rounded dimensions + paddings\n        // and \"client\" properties, though that is not always true in Chrome.\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n\n        // Chrome has a rather weird rounding of \"client\" properties.\n        // E.g. for an element with content width of 314.2px it sometimes gives\n        // the client width of 315px and for the width of 314.7px it may give\n        // 314px. And it doesn't happen all the time. So just ignore this delta\n        // as a non-relevant.\n        if (Math.abs(vertScrollbar) !== 1) {\n            width -= vertScrollbar;\n        }\n\n        if (Math.abs(horizScrollbar) !== 1) {\n            height -= horizScrollbar;\n        }\n    }\n\n    return createRectInit(paddings.left, paddings.top, width, height);\n}\n\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nvar isSVGGraphicsElement = (function () {\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n    // interface.\n    if (typeof SVGGraphicsElement !== 'undefined') {\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\n    }\n\n    // If it's so, then check that element is at least an instance of the\n    // SVGElement and that it has the \"getBBox\" method.\n    // eslint-disable-next-line no-extra-parens\n    return function (target) { return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function'; };\n})();\n\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nfunction isDocumentElement(target) {\n    return target === getWindowOf(target).document.documentElement;\n}\n\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getContentRect(target) {\n    if (!isBrowser) {\n        return emptyRect;\n    }\n\n    if (isSVGGraphicsElement(target)) {\n        return getSVGContentRect(target);\n    }\n\n    return getHTMLElementContentRect(target);\n}\n\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\nfunction createReadOnlyRect(ref) {\n    var x = ref.x;\n    var y = ref.y;\n    var width = ref.width;\n    var height = ref.height;\n\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n    var rect = Object.create(Constr.prototype);\n\n    // Rectangle's properties are not writable and non-enumerable.\n    defineConfigurable(rect, {\n        x: x, y: y, width: width, height: height,\n        top: y,\n        right: x + width,\n        bottom: height + y,\n        left: x\n    });\n\n    return rect;\n}\n\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\nfunction createRectInit(x, y, width, height) {\n    return { x: x, y: y, width: width, height: height };\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\nvar ResizeObservation = function(target) {\n    this.broadcastWidth = 0;\n    this.broadcastHeight = 0;\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n\n    this.target = target;\n};\n\n/**\r\n * Updates content rectangle and tells whether it's width or height properties\r\n * have changed since the last broadcast.\r\n *\r\n * @returns {boolean}\r\n */\n\n\n/**\r\n * Reference to the last observed content rectangle.\r\n *\r\n * @private {DOMRectInit}\r\n */\n\n\n/**\r\n * Broadcasted width of content rectangle.\r\n *\r\n * @type {number}\r\n */\nResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n\n    this.contentRect_ = rect;\n\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n};\n\n/**\r\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n * from the corresponding properties of the last observed content rectangle.\r\n *\r\n * @returns {DOMRectInit} Last observed content rectangle.\r\n */\nResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n\n    return rect;\n};\n\nvar ResizeObserverEntry = function(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit);\n\n    // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n    defineConfigurable(this, { target: target, contentRect: contentRect });\n};\n\nvar ResizeObserverSPI = function(callback, controller, callbackCtx) {\n    this.activeObservations_ = [];\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n        throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n};\n\n/**\r\n * Starts observing provided element.\r\n *\r\n * @param {Element} target - Element to be observed.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Registry of the ResizeObservation instances.\r\n *\r\n * @private {Map<Element, ResizeObservation>}\r\n */\n\n\n/**\r\n * Public ResizeObserver instance which will be passed to the callback\r\n * function and used as a value of it's \"this\" binding.\r\n *\r\n * @private {ResizeObserver}\r\n */\n\n/**\r\n * Collection of resize observations that have detected changes in dimensions\r\n * of elements.\r\n *\r\n * @private {Array<ResizeObservation>}\r\n */\nResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is already being observed.\n    if (observations.has(target)) {\n        return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n\n    this.controller_.addObserver(this);\n\n    // Force the update of observations.\n    this.controller_.refresh();\n};\n\n/**\r\n * Stops observing provided element.\r\n *\r\n * @param {Element} target - Element to stop observing.\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is not being observed.\n    if (!observations.has(target)) {\n        return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n        this.controller_.removeObserver(this);\n    }\n};\n\n/**\r\n * Stops observing all elements.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n};\n\n/**\r\n * Collects observation instances the associated element of which has changed\r\n * it's content rectangle.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.gatherActive = function () {\n        var this$1 = this;\n\n    this.clearActive();\n\n    this.observations_.forEach(function (observation) {\n        if (observation.isActive()) {\n            this$1.activeObservations_.push(observation);\n        }\n    });\n};\n\n/**\r\n * Invokes initial callback function with a list of ResizeObserverEntry\r\n * instances collected from active resize observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n        return;\n    }\n\n    var ctx = this.callbackCtx_;\n\n    // Create ResizeObserverEntry instance for every active observation.\n    var entries = this.activeObservations_.map(function (observation) {\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n};\n\n/**\r\n * Clears the collection of active observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n};\n\n/**\r\n * Tells whether observer has active observations.\r\n *\r\n * @returns {boolean}\r\n */\nResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n};\n\n// Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\nvar ResizeObserver = function(callback) {\n    if (!(this instanceof ResizeObserver)) {\n        throw new TypeError('Cannot call a class as a function.');\n    }\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n\n    observers.set(this, observer);\n};\n\n// Expose public methods of ResizeObserver.\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n    ResizeObserver.prototype[method] = function () {\n        return (ref = observers.get(this))[method].apply(ref, arguments);\n        var ref;\n    };\n});\n\nvar index = (function () {\n    // Export existing implementation if available.\n    if (typeof global$1.ResizeObserver !== 'undefined') {\n        return global$1.ResizeObserver;\n    }\n\n    return ResizeObserver;\n})();\n\nexport default index;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}